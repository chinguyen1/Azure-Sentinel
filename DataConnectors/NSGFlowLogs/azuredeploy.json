{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "appServicePlan": {
      "type": "string",
      "defaultValue": "ServicePlan",
      "allowedValues": [
        "ServicePlan",
        "Consumption"
      ],
      "metadata": {
        "description": "ServicePlan creates an App Service Plan and is billed according to that plan. Consumption bills according to https://azure.microsoft.com/pricing/details/functions/."
      }
    },
    "appServicePlanTier": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium",
        "Isolated"
      ],
      "defaultValue": "",
      "metadata": {
        "description": "ServicePlan only: See here for details: https://azure.microsoft.com/pricing/details/app-service/windows/"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "ServicePlan only: Plan name must match with plan tier. See here for details: https://azure.microsoft.com/pricing/details/app-service/windows/"
      }
    },
    "appServicePlanCapacity": {
      "type": "int",
      "defaultValue": 2
    },    
    "nsgSourceDataConnection": {
      "type": "string",
      "metadata": {
        "description": "Mandatory storage account connection string for nsg flow log data."
      }
    },
    "cefLogAccount": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "ArcSight only: Optional storage account connection string for CEF log tracing."
      }
    },
    "outputBinding": {
      "type": "string",
      "allowedValues": [
        "arcsight",
        "splunk",
        "eventhub",
        "logstash",
        "loganalytics"
      ],
      "defaultValue": "loganalytics",
      "metadata": {
        "description": "Select the desired destination for your logs."
      }
    },
    "arcsightAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "ArcSight only: IP or DNS address of ingestion endpoint."
      }
    },
    "arcsightPort": {
      "type": "string",
      "defaultValue": "1514",
      "metadata": {
        "description": "ArcSight only: TCP port of ingestion endpoint. Defaults to 1514."
      }
    },
    "splunkAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Splunk only: IP or DNS address of HEC port."
      }
    },
    "splunkToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Splunk only: authentication token for the HEC port."
      }
    },
    "eventHubConnection": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Event hub only: Connection string for event hub namespace."
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Event hub only: Event hub name."
      }
    },
    "workspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "workspace Id for log analytics."
      }
    },
    "sharedKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "shared key for log analytics."
      }
    }
  },
  "variables": {
    "functionAppName": "[parameters('appName')]",
    "ServicePlan": "[concat('serviceplan', parameters('appName'))]",
    "Consumption": "[concat('consumption', parameters('appName'))]",
    "hostingPlanName": "[variables(parameters('appServicePlan'))]",
    "storageAccountName": "[concat('func', uniquestring(resourceGroup().id))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "storageContainerName": "insights-logs-networksecuritygroupflowevent"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[tolower(variables('storageAccountName'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [
          ],
          "ipRules": [
          ],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storageAccountName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storageAccountName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        }
      }
    },
    {
      "condition": "[equals(parameters('appServicePlan'), 'ServicePlan')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('ServicePlan')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "tier": "[parameters('appServicePlanTier')]",
        "name": "[parameters('appServicePlanName')]",
        "capacity": "[parameters('appServicePlanCapacity')]"
      }
    },
    {
      "condition": "[equals(parameters('appServicePlan'), 'Consumption')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('Consumption')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('Consumption')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('storageAccountName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "https://aka.ms/githubazurefunctionzip"
            },
            {
              "name": "blobContainerName",
              "value": "[toLower(variables('storageContainerName'))]"
            },
            {
              "name": "nsgSourceDataAccount",
              "value": "nsgSourceDataConnection"
            },
            {
              "name": "nsgSourceDataConnection",
              "value": "[parameters('nsgSourceDataConnection')]"
            },
            {
              "name": "outputBinding",
              "value": "[parameters('outputBinding')]"
            },
            {
              "name": "arcsightAddress",
              "value": "[parameters('arcsightAddress')]"
            },
            {
              "name": "arcsightPort",
              "value": "[parameters('arcsightPort')]"
            },
            {
              "name": "splunkAddress",
              "value": "[parameters('splunkAddress')]"
            },
            {
              "name": "splunkToken",
              "value": "[parameters('splunkToken')]"
            },
            {
              "name": "eventHubConnection",
              "value": "[parameters('eventHubConnection')]"
            },
            {
              "name": "eventHubName",
              "value": "[parameters('eventHubName')]"
            },
            {
              "name": "cefLogAccount",
              "value": "[parameters('cefLogAccount')]"
            },
            {
              "name": "workspaceId",
              "value": "[parameters('workspaceId')]"
            },
            {
              "name": "sharedKey",
              "value": "[parameters('sharedKey')]"
            },
            {
              "name": "logIncomingJSON",
              "value": "false"
            },
            {
              "name": "logOutgoingCEF",
              "value": "false"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/', tolower(variables('storageAccountName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), concat('/default/', variables('storageContainerName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }
  ]
}
